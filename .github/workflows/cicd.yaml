name: CICD Engine

on:
  pull_request:
    types:
      - synchronize
      - opened
      - reopened
    branches:
      - "topic/**"
      - "develop"
      - "stable"
  push:
    branches:
      - "develop"
      - "stable"

jobs:
  env-definer:
    outputs:
      my_env: ${{ steps.setenv.outputs.my_env }}
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve branch name
        id: setenv
        run: |
          # Synchronize case else Push case
          [[ ! -z "${{ github.head_ref }}" ]] && BRANCH="${{ github.head_ref }}" || BRANCH="${{ github.ref }}"
          [[ "$BRANCH" == "topic/"* || "$BRANCH" == "develop"* ]] && echo "my_env=develop" >> $GITHUB_OUTPUT || echo "my_env=stable" >> $GITHUB_OUTPUT
          echo $BRANCH
          echo $GITHUB_OUTPUT

  contexts:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

      - name: Show default environment variables
        run: |
          echo "The job_id is: $GITHUB_JOB"   # reference the default environment variables
          echo "The id of this action is: $GITHUB_ACTION"   # reference the default environment variables
          echo "The run id is: $GITHUB_RUN_ID"
          echo "The GitHub Actor's username is: $GITHUB_ACTOR"
          echo "GitHub SHA: $GITHUB_SHA"

  deploy:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [contexts, env-definer]
    environment:
      name: ${{ needs.env-definer.outputs.my_env }}

    name: Perform deployment

    steps:
      - name: Checkout ${{ github.ref }}
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Echo env
        run: echo ${{ needs.env-definer.outputs.my_env }}

      - name: Echo secrets
        run: |
          echo ${{ secrets.SECRET }} >> toto.txt
          echo ${{ vars.VARIABLE }} >> toto.txt
          cat toto.txt
